name: Release to GitHub and NPM

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Need write access to push commits
      id-token: write  # For npm provenance
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Verify we're on main branch
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Current HEAD: $(git rev-parse HEAD)"
          echo "Current version: $(node -p "require('./package.json').version")"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@atxp'
      
      - name: Install dependencies with rollup workaround
        run: npm ci
        continue-on-error: true
        id: npm-ci
        # Removed NPM_TOKEN from env here - not needed for install
      
      - name: Fallback install if npm ci failed
        if: steps.npm-ci.outcome == 'failure'
        run: |
          echo "npm ci failed, applying rollup optional dependency workaround..."
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install
      
      - name: Build (if needed)
        run: npm run build
        continue-on-error: false
      
      - name: Run tests
        run: npm test
        continue-on-error: false
      
      - name: Update package.json versions and commit
        continue-on-error: true
        run: |
          # Remove 'v' prefix if present (v1.2.3 â†’ 1.2.3)
          VERSION=${{ github.event.release.tag_name }}
          VERSION=${VERSION#v}

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check current version in root package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          if [ "$CURRENT_VERSION" = "$VERSION" ]; then
            echo "Version is already $VERSION, skipping version bump"
            exit 0
          fi

          echo "Updating version from $CURRENT_VERSION to $VERSION"

          # Update root package version
          npm version $VERSION --no-git-tag-version

          # Update all workspace package versions
          npm version $VERSION --no-git-tag-version -w packages/atxp-common
          npm version $VERSION --no-git-tag-version -w packages/atxp-sqlite
          npm version $VERSION --no-git-tag-version -w packages/atxp-redis
          npm version $VERSION --no-git-tag-version -w packages/atxp-server
          npm version $VERSION --no-git-tag-version -w packages/atxp-client
          npm version $VERSION --no-git-tag-version -w packages/atxp-base
          npm version $VERSION --no-git-tag-version -w packages/atxp-worldchain
          npm version $VERSION --no-git-tag-version -w packages/atxp-polygon
          npm version $VERSION --no-git-tag-version -w packages/atxp-express
          npm version $VERSION --no-git-tag-version -w packages/atxp-cloudflare
          npm version $VERSION --no-git-tag-version -w packages/atxp-x402

          # Update cross-package dependencies to match new version
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-client
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-server
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-sqlite
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-redis
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-base
          npm pkg set dependencies."@atxp/client"=$VERSION -w packages/atxp-base
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-worldchain
          npm pkg set dependencies."@atxp/client"=$VERSION -w packages/atxp-worldchain
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-polygon
          npm pkg set dependencies."@atxp/client"=$VERSION -w packages/atxp-polygon
          npm pkg set dependencies."@atxp/server"=$VERSION -w packages/atxp-express
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-cloudflare
          npm pkg set dependencies."@atxp/server"=$VERSION -w packages/atxp-cloudflare
          npm pkg set dependencies."@atxp/common"=$VERSION -w packages/atxp-x402
          npm pkg set dependencies."@atxp/client"=$VERSION -w packages/atxp-x402

          # Regenerate package-lock.json with updated versions
          npm install

          # Commit all changes
          git add package.json package-lock.json packages/*/package.json
          git commit -m "bump version to $VERSION [skip ci]"
          git pull --rebase origin main
          git push origin main

      # Don't rebuild here - packages were already built with correct workspace deps
      # Rebuilding now would try to fetch updated versions from NPM before they're published

      - name: Publish packages to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Publish all workspace packages (order matters for dependencies)
          npm publish -w packages/atxp-common --provenance --access public
          npm publish -w packages/atxp-sqlite --provenance --access public
          npm publish -w packages/atxp-redis --provenance --access public
          npm publish -w packages/atxp-server --provenance --access public
          npm publish -w packages/atxp-client --provenance --access public
          npm publish -w packages/atxp-base --provenance --access public
          npm publish -w packages/atxp-worldchain --provenance --access public
          npm publish -w packages/atxp-polygon --provenance --access public
          npm publish -w packages/atxp-express --provenance --access public
          npm publish -w packages/atxp-cloudflare --provenance --access public
          npm publish -w packages/atxp-x402 --provenance --access public